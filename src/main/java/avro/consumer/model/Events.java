/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package avro.consumer.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Events extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Events\",\"namespace\":\"avro.consumer.model\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"datetime\",\"type\":[\"null\",\"long\"]},{\"name\":\"customer\",\"type\":[\"null\",\"string\"]},{\"name\":\"establishment\",\"type\":[\"null\",\"string\"]},{\"name\":\"deposit\",\"type\":[\"null\",\"string\"]},{\"name\":\"item\",\"type\":[\"null\",\"string\"]},{\"name\":\"way\",\"type\":[\"null\",\"string\"]},{\"name\":\"quantity\",\"type\":[\"null\",\"int\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long id;
  @Deprecated public java.lang.Long datetime;
  @Deprecated public java.lang.CharSequence customer;
  @Deprecated public java.lang.CharSequence establishment;
  @Deprecated public java.lang.CharSequence deposit;
  @Deprecated public java.lang.CharSequence item;
  @Deprecated public java.lang.CharSequence way;
  @Deprecated public java.lang.Integer quantity;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Events() {}

  /**
   * All-args constructor.
   */
  public Events(java.lang.Long id, java.lang.Long datetime, java.lang.CharSequence customer, java.lang.CharSequence establishment, java.lang.CharSequence deposit, java.lang.CharSequence item, java.lang.CharSequence way, java.lang.Integer quantity) {
    this.id = id;
    this.datetime = datetime;
    this.customer = customer;
    this.establishment = establishment;
    this.deposit = deposit;
    this.item = item;
    this.way = way;
    this.quantity = quantity;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return datetime;
    case 2: return customer;
    case 3: return establishment;
    case 4: return deposit;
    case 5: return item;
    case 6: return way;
    case 7: return quantity;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: datetime = (java.lang.Long)value$; break;
    case 2: customer = (java.lang.CharSequence)value$; break;
    case 3: establishment = (java.lang.CharSequence)value$; break;
    case 4: deposit = (java.lang.CharSequence)value$; break;
    case 5: item = (java.lang.CharSequence)value$; break;
    case 6: way = (java.lang.CharSequence)value$; break;
    case 7: quantity = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'datetime' field.
   */
  public java.lang.Long getDatetime() {
    return datetime;
  }

  /**
   * Sets the value of the 'datetime' field.
   * @param value the value to set.
   */
  public void setDatetime(java.lang.Long value) {
    this.datetime = value;
  }

  /**
   * Gets the value of the 'customer' field.
   */
  public java.lang.CharSequence getCustomer() {
    return customer;
  }

  /**
   * Sets the value of the 'customer' field.
   * @param value the value to set.
   */
  public void setCustomer(java.lang.CharSequence value) {
    this.customer = value;
  }

  /**
   * Gets the value of the 'establishment' field.
   */
  public java.lang.CharSequence getEstablishment() {
    return establishment;
  }

  /**
   * Sets the value of the 'establishment' field.
   * @param value the value to set.
   */
  public void setEstablishment(java.lang.CharSequence value) {
    this.establishment = value;
  }

  /**
   * Gets the value of the 'deposit' field.
   */
  public java.lang.CharSequence getDeposit() {
    return deposit;
  }

  /**
   * Sets the value of the 'deposit' field.
   * @param value the value to set.
   */
  public void setDeposit(java.lang.CharSequence value) {
    this.deposit = value;
  }

  /**
   * Gets the value of the 'item' field.
   */
  public java.lang.CharSequence getItem() {
    return item;
  }

  /**
   * Sets the value of the 'item' field.
   * @param value the value to set.
   */
  public void setItem(java.lang.CharSequence value) {
    this.item = value;
  }

  /**
   * Gets the value of the 'way' field.
   */
  public java.lang.CharSequence getWay() {
    return way;
  }

  /**
   * Sets the value of the 'way' field.
   * @param value the value to set.
   */
  public void setWay(java.lang.CharSequence value) {
    this.way = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /** Creates a new Events RecordBuilder */
  public static avro.consumer.model.Events.Builder newBuilder() {
    return new avro.consumer.model.Events.Builder();
  }
  
  /** Creates a new Events RecordBuilder by copying an existing Builder */
  public static avro.consumer.model.Events.Builder newBuilder(avro.consumer.model.Events.Builder other) {
    return new avro.consumer.model.Events.Builder(other);
  }
  
  /** Creates a new Events RecordBuilder by copying an existing Events instance */
  public static avro.consumer.model.Events.Builder newBuilder(avro.consumer.model.Events other) {
    return new avro.consumer.model.Events.Builder(other);
  }
  
  /**
   * RecordBuilder for Events instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Events>
    implements org.apache.avro.data.RecordBuilder<Events> {

    private long id;
    private java.lang.Long datetime;
    private java.lang.CharSequence customer;
    private java.lang.CharSequence establishment;
    private java.lang.CharSequence deposit;
    private java.lang.CharSequence item;
    private java.lang.CharSequence way;
    private java.lang.Integer quantity;

    /** Creates a new Builder */
    private Builder() {
      super(avro.consumer.model.Events.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(avro.consumer.model.Events.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datetime)) {
        this.datetime = data().deepCopy(fields()[1].schema(), other.datetime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customer)) {
        this.customer = data().deepCopy(fields()[2].schema(), other.customer);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.establishment)) {
        this.establishment = data().deepCopy(fields()[3].schema(), other.establishment);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.deposit)) {
        this.deposit = data().deepCopy(fields()[4].schema(), other.deposit);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.item)) {
        this.item = data().deepCopy(fields()[5].schema(), other.item);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.way)) {
        this.way = data().deepCopy(fields()[6].schema(), other.way);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.quantity)) {
        this.quantity = data().deepCopy(fields()[7].schema(), other.quantity);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Events instance */
    private Builder(avro.consumer.model.Events other) {
            super(avro.consumer.model.Events.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.datetime)) {
        this.datetime = data().deepCopy(fields()[1].schema(), other.datetime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customer)) {
        this.customer = data().deepCopy(fields()[2].schema(), other.customer);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.establishment)) {
        this.establishment = data().deepCopy(fields()[3].schema(), other.establishment);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.deposit)) {
        this.deposit = data().deepCopy(fields()[4].schema(), other.deposit);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.item)) {
        this.item = data().deepCopy(fields()[5].schema(), other.item);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.way)) {
        this.way = data().deepCopy(fields()[6].schema(), other.way);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.quantity)) {
        this.quantity = data().deepCopy(fields()[7].schema(), other.quantity);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public avro.consumer.model.Events.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public avro.consumer.model.Events.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'datetime' field */
    public java.lang.Long getDatetime() {
      return datetime;
    }
    
    /** Sets the value of the 'datetime' field */
    public avro.consumer.model.Events.Builder setDatetime(java.lang.Long value) {
      validate(fields()[1], value);
      this.datetime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'datetime' field has been set */
    public boolean hasDatetime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'datetime' field */
    public avro.consumer.model.Events.Builder clearDatetime() {
      datetime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'customer' field */
    public java.lang.CharSequence getCustomer() {
      return customer;
    }
    
    /** Sets the value of the 'customer' field */
    public avro.consumer.model.Events.Builder setCustomer(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.customer = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'customer' field has been set */
    public boolean hasCustomer() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'customer' field */
    public avro.consumer.model.Events.Builder clearCustomer() {
      customer = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'establishment' field */
    public java.lang.CharSequence getEstablishment() {
      return establishment;
    }
    
    /** Sets the value of the 'establishment' field */
    public avro.consumer.model.Events.Builder setEstablishment(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.establishment = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'establishment' field has been set */
    public boolean hasEstablishment() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'establishment' field */
    public avro.consumer.model.Events.Builder clearEstablishment() {
      establishment = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'deposit' field */
    public java.lang.CharSequence getDeposit() {
      return deposit;
    }
    
    /** Sets the value of the 'deposit' field */
    public avro.consumer.model.Events.Builder setDeposit(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.deposit = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'deposit' field has been set */
    public boolean hasDeposit() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'deposit' field */
    public avro.consumer.model.Events.Builder clearDeposit() {
      deposit = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'item' field */
    public java.lang.CharSequence getItem() {
      return item;
    }
    
    /** Sets the value of the 'item' field */
    public avro.consumer.model.Events.Builder setItem(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.item = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'item' field has been set */
    public boolean hasItem() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'item' field */
    public avro.consumer.model.Events.Builder clearItem() {
      item = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'way' field */
    public java.lang.CharSequence getWay() {
      return way;
    }
    
    /** Sets the value of the 'way' field */
    public avro.consumer.model.Events.Builder setWay(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.way = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'way' field has been set */
    public boolean hasWay() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'way' field */
    public avro.consumer.model.Events.Builder clearWay() {
      way = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'quantity' field */
    public java.lang.Integer getQuantity() {
      return quantity;
    }
    
    /** Sets the value of the 'quantity' field */
    public avro.consumer.model.Events.Builder setQuantity(java.lang.Integer value) {
      validate(fields()[7], value);
      this.quantity = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'quantity' field has been set */
    public boolean hasQuantity() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'quantity' field */
    public avro.consumer.model.Events.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public Events build() {
      try {
        Events record = new Events();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.datetime = fieldSetFlags()[1] ? this.datetime : (java.lang.Long) defaultValue(fields()[1]);
        record.customer = fieldSetFlags()[2] ? this.customer : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.establishment = fieldSetFlags()[3] ? this.establishment : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.deposit = fieldSetFlags()[4] ? this.deposit : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.item = fieldSetFlags()[5] ? this.item : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.way = fieldSetFlags()[6] ? this.way : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.quantity = fieldSetFlags()[7] ? this.quantity : (java.lang.Integer) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
